import streamlit as st
import requests
from PIL import Image
from io import BytesIO
import matplotlib.pyplot as plt

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_URL = "https://nine-laba.onrender.com/predict/"
CLASS_NAMES = ['cat', 'dog', 'panda']
MAX_FILE_SIZE = 2 * 1024 * 1024  # 2MB

st.title("–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π üê±üê∂üêº")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—à–∫–∏, —Å–æ–±–∞–∫–∏ –∏–ª–∏ –ø–∞–Ω–¥—ã")


def main():
    uploaded_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        type=['jpg', 'jpeg', 'png'],
        accept_multiple_files=False
    )

    if uploaded_file is not None:
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
            if uploaded_file.size > MAX_FILE_SIZE:
                st.error(f"–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º {MAX_FILE_SIZE // 1024 // 1024}MB)")
                return

            # –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image = Image.open(uploaded_file)
            st.image(image, caption='–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', use_column_width=True)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ API
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."):
                files = {"file": (uploaded_file.name, uploaded_file.getvalue(), uploaded_file.type)}
                response = requests.post(
                    API_URL,
                    files=files,
                    timeout=300  # –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥
                )

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if response.status_code == 200:
                result = response.json()
                st.success(f"**–†–µ–∑—É–ª—å—Ç–∞—Ç:** {result['class']}")

                # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
                fig, ax = plt.subplots()
                ax.bar(result['probabilities'].keys(), result['probabilities'].values())
                ax.set_ylabel("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å")
                ax.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π")
                st.pyplot(fig)

            else:
                st.error(f"–û—à–∏–±–∫–∞ API: {response.status_code} - {response.text}")

        except requests.exceptions.RequestException as e:
            st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {str(e)}")


if __name__ == "__main__":
    main()